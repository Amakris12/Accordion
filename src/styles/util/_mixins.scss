//center any block element

@mixin push-autoCenter {
  margin: {
    left: auto;
    right: auto;
  }
  display: block;
}

//Creating Scalable Elements
//Imagines or backgrounds that require a ratio

@mixin responsive-ratio($x, $y, $pseudo: false) {
  $padding: unquote(($y/$x) * 100 + "%");
  @if $pseudo {
    &::before {
      @include pseudo($pos: relative);
      width: 100%;
    }
  } @else {
    padding-top: $padding;
  }
}

@mixin fade($type) {
  @if $type == "hide" {
    visibility: hidden;
    opacity: 0;
    transition: visibility 1s opacity 1s;
  } @else if $type == "show" {
    visibility: visible;
    opacity: 1;
    transition: visibility 1s opacity 1s;
  }
}
@mixin font-face($font-name, $file-name, $wieght: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($file-name + ".eot"); //$file-name+'.eot"
    src: url($file-name + ".eot?#iefix") format(embedded-opentype);
    url: ($file-name + ".woff") format("woff");
    url: ($file-name + ".ttf") format("truetype");
    url: ($file-name + ".svg") format("svg");
    font-weight: $wieght;
    font-style: $style;
  }
}
@mixin box($width, $height: $width) {
  width: $width;
  height: $height;
}
//cover my whole background mixin
@mixin cover-background() {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: cover;
}
/*
div{
    background-image:url(jt23.jpg);
    @include image-cover-background()
*/
//this is when we use ::after and ::before
@mixin beforeafter(
  $width: 100%,
  $height: 100%,
  $display: block,
  $pos: absolute,
  $content: ""
) {
  content: $content;
  display: $display;
  position: $pos;
  @include box($width, $height);
}
@mixin darkMode {
  background-color: black;
  color: white;
}
@mixin lightMode {
  background-color: white;
  color: black;
}

@mixin navBarTable {
  box-shadow: rgb(255, 255, 255) 2px 2px 2px 2px;
  display: flex;
  justify-content: center;
  height: 8rem;
  background-color: rgba(0, 0, 0, 0.8);
}
@mixin footerTable {
  margin-top: 50rem;
  box-shadow: cornflowerblue 2px 2px 2px 2px;
  background-color: rgb(0, 0, 0);
  opacity: 0.8;
  display: flex;
  justify-content: center;
}
@mixin navBarTD {
  font-size: 1.5rem;
  text-align: center;
  width: 20rem;
  height: 8rem;
  position: relative;
  top: -0.1rem;
  /* Dropdown Button */
  .dropbtn {
    background-color: transparent;
    color: white;
    height: 7rem;
    font-size: 1.5rem;
    border: none;
  }
  .dropbtn:hover {
    color: rgb(14, 0, 92);
    font-weight: bold;
  }

  /* The container <div> - needed to position the dropdown content */
  .dropdown {
    display: inline-block;
  }

  /* Dropdown Content (Hidden by Default) */
  .dropdown-content {
    display: none;
    position: absolute;
    left: 2rem;
    min-width: 15rem;
    box-shadow: 10px 5px 16px 0px rgba(255, 255, 255, 0.2);
  }

  /* Links inside the dropdown */
  .dropdown-content a {
    color: white;
    text-decoration: none;
    display: block;
    position: relative;
    padding: 1rem;
  }
  /* Show the dropdown menu on hover */
  .dropdown:hover .dropdown-content {
    display: block;
  }
}
@mixin navBarTdHover {
  color: blue;
  font-weight: bold;
  .dropdown-content a:hover {
    color: blue;
  }
}
@mixin footertd {
  font-size: 1rem;
  text-align: center;
  width: 20rem;
  height: 8rem;
  position: relative;
  top: -0.1rem;
  /* Dropdown Button */
  .dropbtn {
    background-color: transparent;
    color: white;
    height: 7rem;
    font-size: 1.5rem;
    border: none;
  }
  .dropbtn:hover {
    color: rgb(14, 0, 92);
    font-weight: bold;
  }

  /* The container <div> - needed to position the dropdown content */
  .dropdown {
    display: inline-block;
  }

  /* Dropdown Content (Hidden by Default) */
  .dropdown-content {
    display: none;
    position: absolute;
    left: 2rem;
    min-width: 15rem;
    box-shadow: 10px 5px 16px 0px rgba(255, 255, 255, 0.2);
  }

  /* Links inside the dropdown */
  .dropdown-content a {
    color: white;
    text-decoration: none;
    display: block;
    position: relative;
    padding: 1rem;
  }
  /* Show the dropdown menu on hover */
  .dropdown:hover .dropdown-content {
    display: block;
  }
}
@mixin footerTDHover {
  opacity: 1;
  font-weight: bolder;
  color: rgb(2, 16, 80);
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

@mixin position($position, $args) {
  @each $pos in top right bottom left {
    $i: index($args, $pos);
    @if $i and $i + 1 <=length($args) and type-of(nth($args, $i + 1)) {
      #{$pos}: nth($args, $i + 1);
    }
  }
  position: $position;
}

@mixin absolute($args: "") {
  @include position(absolute, $args);
}

@mixin fixed($args: "") {
  @include position(fixed, $args);
}

@mixin relative($args: "") {
  @include position(relative, $args);
}

$phone-wide: 480px;
$phablet: 560px;
$tablet-small: 640px;
$tablet: 768px;
$large: 1024px;
$desktop: 1280px;
$desktop-wide: 1440px;

@mixin phone {
  @media screen and (min-width: $phone-wide) {
    @content;
  }
}

@mixin tablet {
  @media screen and (min-width: $tablet) {
    @content;
  }
}

@mixin large {
  @media screen and (min-width: $large) {
    @content;
  }
}

@mixin desktop {
  @media screen and (min-width: $desktop) {
    @content;
  }
}

@mixin input-placeholder {
  &.placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

// @include font-face("MyFont", './base/typography/myfont.ttf', $style: underline)
// div{
//   font-family: "MyFont";
// }

@mixin text-shorten {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//creating css triangles
@mixin css-triangle(
  $color,
  $direction,
  $size: 6px,
  $position: absolute,
  $round: false
) {
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round($size / 2.5);
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round($size / 2.5);
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

@mixin animateDelay($delay) {
  @for $i from 1 to 0 {
    &:nth-child(#{i}) {
      transition-delay: $delay * $i;
    }
  }
} //adds delay to children n stuff

//flexbox toolkit
@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-column {
  @include flex-center();
  flex-direction: column;
}
@mixin cover-background {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}
